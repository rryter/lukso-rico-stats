// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rtm-primary: mat-palette($mat-blue);
$rtm-accent: mat-palette($mat-red, A200, A100, A400);

// The warn palette is optional (defaults to red).
$rtm-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rtm-theme: mat-light-theme(
  (
    color: (
      primary: $rtm-primary,
      accent: $rtm-accent,
      warn: $rtm-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($rtm-theme);

/* You can add global styles to this file, and also import other style files */

html {
  background: #2d3e57;
  background: -webkit-linear-gradient(top right, #2d3e57, #232536);
  background: -moz-linear-gradient(top right, #2d3e57, #232536);
  background: linear-gradient(to bottom left, #2d3e57, #232536);
}

code {
  word-break: break-all;
}

.spacer {
  flex: 1 1 auto;
}

code {
  display: inline-block;
  background: rgb(216, 216, 216);
  color: black;
  padding: 2px 10px;
}

mat-dialog-container ng-component {
  display: block;
}
div.mat-dialog-content {
  overflow: visible;
}

.btn-success {
  background-color: #5cb85c;
  color: white;
}
